import { PieChartSharp, Refresh } from "@mui/icons-material";
import React, { useEffect, useState } from "react";
import BoxUi from "../../../../components/UiKit/BoxUi";
import AttentionCard from "../../components/AttentionCard/AttentionCard";
import OverviewHeader from "../../components/OverviewHeader/OverviewHeader";
import useStyles from "./Financial.style";
import { ReactComponent as SaveMoney } from "../../../../assets/svg/SaveMoney.svg";
import WalletTable from "../../components/WalletTable/WalletTable";
import SearchUi from "../../../../components/UiKit/SearchUi/SearchUi";
import ButtonUi from "../../../../components/UiKit/ButtonUi";
import LogoSVG from "../../../../assets/images/theerco.png";
import ProfitTable from "./components/ProfitTable/ProfitTable";
import { useDispatch } from "react-redux";
import { setModal } from "../../../../store/ModalSlice";
import { getFinancial } from "pages/Wallet/store/FinancialSlice";

export default function Financial({ children, ...props }) {
  const classes = useStyles();
  const [visibility, setVisibility] = useState(true);
  const ChartValues = {
    "Remaining Shares": 0,
    "Your Shares": 0,
    Sold: 0,
  };
  const dispatch = useDispatch();
  useEffect(() => {
    dispatch(getFinancial());
  }, []);

  return (
    <div className={`flex flex-col gap-[10px]`}>
      <OverviewHeader
        lockIcon={<PieChartSharp className="text-[16px]" />}
        ChartValues={ChartValues}
        visibility={visibility}
        setVisibility={setVisibility}
      />
      <div className={`flex flex-col lg:flex-row gap-[10px] leading-none`}>
        <AttentionCard className={`flex-[3]`} items={attentionItems} />
        <BoxUi
          className={`flex flex-[2] border border-solid rounded-[5px] lg:min-w-[389px] gap-[15px] items-center ${classes.share}`}
        >
          <div className={`flex flex-col gap-[10px] `}>
            <div className={`text-success text-[14px] font-bold`}>
              Share of Profit per Month
            </div>
            <div className={`opacity-50 text-[12px] leading-tight`}>
              By investing in 3CO Exchange you will receive a share of profit
              that generated by the exchange sucha as transaction fees. This
              profits of exchange will distribute to investors at the{" "}
              <span className={`font-bold`}>end of month.</span>
            </div>
          </div>
          <div className={`flex flex-col w-[107px] hidden lg:block`}>
            <SaveMoney className={`w-[107px]`} />
          </div>
        </BoxUi>
      </div>
      <BoxUi
        className={`flex p-0 flex-col grow h-[310px]`}
        classes={{
          header: "gap-[38px] flex items-center flex-col lg:flex-row",
          body: "h-full gap-[10px] flex flex-col",
        }}
        header={
          <>
            <div className={`font-bold`}>Assets</div>
            <SearchUi className={`hidden lg:block max-w-[250px]`} />
          </>
        }
      >
        <SearchUi className={`block lg:hidden`} />
        <WalletTable
          pagination={{ count: 1 }}
          header={headerItems}
          rows={rows}
        />
      </BoxUi>
      <ProfitTable />
    </div>
  );
}

const attentionItems = [
  { title: "Minimum Stack", value: "1000", unit: "USDT", warning: true },
  { title: "Maximum Stack", value: "125000", unit: "USDT", warning: true },
  { title: "Price of 1 Share", value: "0.008", unit: "USDT", warning: true },
  {
    title: "Unlock Time",
    value: "365",
    unit: (
      <span>
        {" "}
        Days{" "}
        <span className="hidden lg:inline-block">
          (After Investment Complition)
        </span>
      </span>
    ),
    warning: true,
  },
];

const headerItems = [
  { name: "Coin", className: "text-start" },
  { name: "Stacked Amount" },
  { name: "Your Share (%)" },
  { name: "Operation", className: "text-end" },
];

const CoinEl = ({ name, ticker, icon }) => {
  const classes = useStyles();
  return (
    <div className={`flex gap-[7px] items-center`}>
      <div
        className={`flex ${classes.coinEl} w-[40px] h-[40px] p-[6px] items-center justify-center rounded-full border border-solid`}
      >
        <img className={`w-full h-full`} src={icon} />
      </div>
      <div className={`font-bold`}>{name}</div>
      <li className={`w-1 text-[10px] opacity-50`} />
      <div className={classes.ticker}>{ticker}</div>
    </div>
  );
};

const Operation = () => {
  const dispatch = useDispatch();
  const btnClass = ` min-w-0 w-fit`;
  return (
    <div className={`inline-flex items-center gap-[10px] w-fit justify-center`}>
      <ButtonUi
        disableRipple
        style={{ position: "inherit" }}
        className={`p-[2px] bg-[transparent_!important] ${btnClass}`}
      >
        <Refresh className={`text-[15px]`} />
      </ButtonUi>
      <ButtonUi
        disableRipple
        style={{ position: "inherit" }}
        className={`p-[2px] bg-[transparent_!important] ${btnClass}`}
        onClick={() =>
          dispatch(setModal({ visible: true, id: "FinancialModal" }))
        }
      >
        Deposit
      </ButtonUi>
      <ButtonUi
        disableRipple
        disabled
        style={{ position: "inherit" }}
        className={`p-[2px] bg-[transparent_!important] ${btnClass}`}
      >
        Withdrow
      </ButtonUi>
    </div>
  );
};
function createData(coin, amount, share) {
  return [
    { children: <CoinEl {...coin} />, align: "left", className: `w-[250px]` },
    { children: <NumberEl value={amount} /> },
    { children: <div>{share}</div> },
    { children: <Operation />, align: "right", className: `w-[200px]` },
  ];
}
const NumberEl = ({ value }) => {
  const classes = useStyles();
  return <div className={classes.ticker}>{value.toString()}</div>;
};
const rows = [
  createData(
    { name: "3co", ticker: "3CO", icon: LogoSVG },
    "0.00000024685",
    "0.015%"
  ),
];
